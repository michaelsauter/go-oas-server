// Code generated by go generate; DO NOT EDIT.
package {{ .PackageName }}

import (
	"net/http"
	"path"
	"strings"
)

{{- range $route, $routePathPoint := .PathHandlers }}
func (oas *OpenAPIServer) {{ $route }}(w http.ResponseWriter, r *http.Request, p string) {
	var head string
	head, p = shiftPath(p)

	// If head is empty, try one of the methods
	if head == "" {
		{{- range $method, $operation := $routePathPoint.Operations}}
		if r.Method == "{{ $method }}" {
			oas.serve(oas.{{ $operation.OperationID }}.execute, oas.{{ $operation.OperationID }}.middlewares, w, r)
			return
		}
		{{- end }}
		http.Error(w, "Not Found", http.StatusNotFound)
		return
	}

	{{- if $routePathPoint.Segments }}
	// Match against segments
	{{- range $segment, $pathPoint := $routePathPoint.Segments }}
	{{- if not $pathPoint.IsParam }}
	if head == "{{ $segment }}" {
		oas.{{ $pathPoint.Route }}(w, r, p)
		return
	}
	{{- end }}
	{{- end }}
	{{- end }}

	{{- if $routePathPoint.AnySegmentIsParam }}
	// "Match" against path param
	// https://swagger.io/specification/#pathsObject defines that
	// no two paths can have different params at the same depth.
	{{- range $segment, $pathPoint := $routePathPoint.Segments}}
	{{- if $pathPoint.IsParam }}
	oas.{{ $pathPoint.Route }}(w, r, p)
	return
	{{- end }}
	{{- end }}
	{{- else }}
	// Not found
	http.Error(w, "Not Found", http.StatusNotFound)
	{{- end }}
}
{{- end }}

// shiftPath splits off the first component of p, which will be cleaned of
// relative components before processing. head will never contain a slash and
// tail will always be a rooted path without trailing slash.
// Use e.g. like this: head, req.URL.Path = ShiftPath(req.URL.Path)
// Taken from https://blog.merovius.de/2017/06/18/how-not-to-use-an-http-router.html.
func shiftPath(p string) (head, tail string) {
    p = path.Clean("/" + p)
    i := strings.Index(p[1:], "/") + 1
    if i <= 0 {
        return p[1:], "/"
    }
    return p[1:i], p[i:]
}
